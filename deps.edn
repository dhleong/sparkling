{:version "0.1.0"

 :paths ["src" "resources"]

 ; NOTE: we use 1.10.2-alpha1 right now because it contains
 ; a fix for native-image creation
 ; see: https://clojure.atlassian.net/browse/CLJ-1472
 :deps
 {org.clojure/clojure {:mvn/version "1.10.2-alpha1"}
  docopt {:mvn/version "0.6.1"}

  cheshire {:mvn/version "5.10.0"}
  com.cognitect/transit-clj {:mvn/version "1.0.324"}
  com.squareup.okio/okio {:mvn/version "2.5.0"}
  funcool/promesa {:mvn/version "5.1.0"}
  rewrite-clj {:mvn/version "0.6.1"}
  teknql/systemic {:mvn/version "0.2.0"}

  com.rpl/specter {:mvn/version "1.1.3"}}

 ; explicitly specify maven repos for cambada
 :mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}
             "clojars" {:url "https://repo.clojars.org/"}}

 :aliases
 {:dev {:extra-deps {cider/cider-nrepl {:mvn/version "0.24.0"}
                     refactor-nrepl {:mvn/version "2.5.0"}}
        :extra-paths ["test"]
        :main-opts ["-m" "nrepl.cmdline"
                    "--middleware" "[cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]"]}

  :test {:extra-paths ["test"]
         :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                                 :sha "209b64504cb3bd3b99ecfec7937b358a879f55c1"}}
         :main-opts ["-m" "cognitect.test-runner"]}

  :outdated {:extra-deps {olical/depot {:mvn/version "1.8.4"}}
             :main-opts ["-m" "depot.outdated.main"]}

  ; quick run cli:
  :run {:main-opts ["-m" "sparkling.core"]}

  ; packaging:
  :uberjar {:extra-deps {luchiniatwork/cambada {:mvn/version "1.0.0"}}
            :main-opts ["-m" "cambada.uberjar"
                        "-m" "sparkling.core"]}

  ; this one seems to fail with:
  ;   Could not locate clojure/core__init.class, clojure/core.clj or clojure/core.cljc on classpath.
  ; at runtime. If I upgrade to 1.0.2 it just seems to hang and pin the
  ; CPU at ~1200% usage (yikes)
  :native-image-cambada
  {:extra-deps {luchiniatwork/cambada {:mvn/version "1.0.0"}}
   :main-opts ["-m" "cambada.native-image"
               "-m" "sparkling.core"
               "--graalvm-opt" "J-Xmx16g"
               "--graalvm-opt" "-verbose"
               ]}

  ; this one actually works!
  :native-image
  {:extra-deps
   {clj.native-image
    {:git/url "https://github.com/taylorwood/clj.native-image.git"
     :sha "602587dfb5243ea8c72ed3e967c37c1f9d611723"}}
   :main-opts ["-m clj.native-image sparkling.core"
               "-H:Name=target/sparkling"
               "-H:+ReportExceptionStackTraces"
               "-H:+JNI"
               "-H:IncludeResources='.*deps.edn$'"
               "-H:Log=registerResource:"
               "-H:ReflectionConfigurationFiles=reflection.json"
               "-J-Dclojure.spec.skip-macros=true"
               "-J-Dclojure.compiler.direct-linking=true"
               "-J-Xmx16g"
               "--initialize-at-run-time=java.lang.Math\\$RandomNumberGeneratorHolder"
               "--initialize-at-build-time"
               "--verbose"
               "--allow-incomplete-classpath"
               "--report-unsupported-elements-at-runtime"
               "--no-fallback"
               "--no-server"]}}}
